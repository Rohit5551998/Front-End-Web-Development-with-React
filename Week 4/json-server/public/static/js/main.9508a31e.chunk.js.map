{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/AboutComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","to","id","width","Menu","menu","dishes","map","key","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","RenderDish","RenderComments","comments","postComment","dishId","commentList","date","Date","parse","setDate","getDate","comment","author","Intl","DateTimeFormat","year","month","day","format","class","CommentForm","state","isModalOpen","toggleModal","setState","rating","Fragment","outline","onClick","isOpen","toggle","xs","defaultValue","value","selected","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","addComment","catch","console","log","feedbackValues","newFeedback","firstname","lastname","telnum","email","agree","contactType","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9508a31e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n    if (isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n        return(\n            <FadeTransform in \n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>: null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n    }\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} \n                        isLoading={props.dishesLoading}\n                        errMess={props.dishesErrMess}\n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                        isLoading={props.promosLoading}\n                        errMess={props.promosErrMess}\n                    />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader} \n                        isLoading={props.leadersLoading}\n                        errMess={props.leadersErrMess}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent'; \nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderMenuItem({ dish }) {\n    return(\n        <Card>\n            <Link to={`/menu/${dish.id}`}>\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n\n    );\n} \n\nconst Menu = (props) => {\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });\n\n    if (props.dishes.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n\n    else {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\nexport default Menu;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\nconst minLength = (len) => (val) => (val) && (val.length >= len)\nconst isNumber = (val) => !isNaN(Number(val))\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n    }\n\n\n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            { /* eslint-disable-next-line jsx-a11y/anchor-is-valid */ }\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \n                                        placeholder=\"First Name\" className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\"\n                                            messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">            \n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \n                                        placeholder=\"Last Name\" className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\" \n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">                                \n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \n                                        placeholder=\"Tel. Number\" className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                    />\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\" \n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">                                \n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \n                                        placeholder=\"Email\" className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                    />\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\" \n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">                                \n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">                                \n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" \n                                        rows=\"12\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">                                \n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent'; \nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader({ leader }) {\n    return(\n        <div key={leader.id} className=\"col-12 mt-5\">\n            <Media tag=\"li\">\n                <Media left middle>\n                    <Media object src={baseUrl + leader.image} alt={leader.name} />\n                </Media>\n                <Media body className=\"ml-5\">\n                    <Fade in>\n                    <Media heading>\n                        {leader.name}\n                    </Media>\n                    <p>{leader.designation}</p>\n                    <p>{leader.description}</p>\n                    </Fade>\n                </Media>\n            </Media>\n        </div>\n    );\n}\n\n\nfunction About(props) {\n\n    const leaders = props.leaders.leaders.map((leader) => {\n        return (\n            <RenderLeader leader={leader} />\n        );\n    });\n\n    if (props.leaders.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n\n    else if (props.leaders.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.dishes.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n\n    else {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>About Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-6\">\n                        <h2>Our History</h2>\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                            <CardBody>\n                                <dl className=\"row p-1\">\n                                    <dt className=\"col-6\">Started</dt>\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\n                                    <dd className=\"col-6\">$1,250,375</dd>\n                                    <dt className=\"col-6\">Employees</dt>\n                                    <dd className=\"col-6\">40</dd>\n                                </dl>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-12\">\n                        <Card>\n                            <CardBody className=\"bg-faded\">\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                        I'm not hungry enough to eat six.</p>\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                        P. Pepe, Diversion Books, 2014</cite>\n                                    </footer>\n                                </blockquote>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Corporate Leadership</h2>\n                    </div>\n                    <div className=\"col-12\">\n                        <Media list>\n                            <Stagger in>\n                                {leaders}\n                            </Stagger>\n                        </Media>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default About;    ","import React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, \n    Button, Modal, ModalHeader, ModalBody, Row, Label, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\nconst minLength = (len) => (val) => (val) && (val.length >= len)\n\nfunction RenderDish({dish}) {\n    return(\n        <div className=\"col-12 col-md-5 m-1\">\n            <FadeTransform in \n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\n                    <CardBody>\n                        <CardTitle>{dish.name}</CardTitle>\n                        <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        </div>     \n    );\n}\n\nfunction RenderComments({comments, postComment, dishId}) {\n\n    const commentList = comments.map((item) => {\n        var date = new Date(Date.parse(item.date));\n        date.setDate(date.getDate()+1);\n        return (\n            <Fade in>\n                <div key={item.id}>\n                    <li>{item.comment}</li>\n                    <br></br>\n                    <li>-- {item.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(date)}</li>\n                    <br></br>\n                </div>\n            </Fade>\n        );\n    });\n    \n    return(\n        <div className=\"col-12 col-md-5 m-1\">\n            <h4>Comments</h4>\n            <ul class=\"list-unstyled\">\n                <Stagger in>\n                    {commentList}\n                </Stagger>\n                <CommentForm dishId={dishId} postComment={postComment} />\n            </ul>\n        </div>\n    );\n}\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen:false\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Button outline onClick={this.toggleModal}>\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} >\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" xs={12}>Rating</Label>\n                                <Col xs={12}>\n                                    <Control.select model=\".rating\" name=\"rating\" className=\"form-control\" defaultValue=\"1\">\n                                        <option value=\"1\" selected>1</option>\n                                        <option value=\"2\">2</option>\n                                        <option value=\"3\">3</option>\n                                        <option value=\"4\">4</option>\n                                        <option value=\"5\">5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" xs={12}>Your Name</Label>\n                                <Col xs={12}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        placeholder=\"Your Name\" className=\"form-control\" \n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }} \n                                    />\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\n                                        messages={{\n                                            required, minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" xs={12}>Comment</Label>\n                                <Col xs={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                        rows=\"6\" className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col xs={12}>\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n\n}\n\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderDish dish={props.dish} />\n                    <RenderComments comments={props.comments} \n                        postComment={props.postComment} dishId={props.dish.id}\n                    />\n                </div>\n            </div> \n        );\n    }\n\n    else {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default DishDetail;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Modal, ModalHeader, ModalBody, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value \n        + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n               <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav}/>\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/home\">\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante Con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\" \n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\" \n                                    innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\" \n                                        innerRef={(input) => this.remember = input} />\n                                    Remember Me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to=\"/home\">Home</Link></li>\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\n                            <li><Link to=\"/menu\">Menu</Link></li>\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n\t\t                    121, Clear Water Bay Road<br />\n\t\t                    Clear Water Bay, Kowloon<br />\n\t\t                    HONG KONG<br />\n\t\t                    <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t                    <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t                    <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    }\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: 'POST',\n        body: JSON.stringify(newComment),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {console.log('Post comments', error.message,\n            alert('Your comment could not be posted\\nError: '+ error.message))});\n\n};\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    /* Simulate Loading from Server\n    setTimeout(() => {\n        dispatch(addDishes(DISHES));\n    }, 2000);\n    */\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport  const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport  const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if(response.ok) {\n                return response\n            }\n            else {\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch(error => dispatch(leadersFailed(error)));\n\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\nexport const postFeedback = (feedbackValues) => (dispatch) => {\n    \n    const newFeedback = {\n        firstname: feedbackValues.firstname,\n        lastname: feedbackValues.lastname,\n        telnum: feedbackValues.telnum,\n        email: feedbackValues.email,\n        agree: feedbackValues.agree,\n        contactType: feedbackValues.contactType,\n        message: feedbackValues.message\n    }\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'feedback', {\n        method: 'POST',\n        body: JSON.stringify(newFeedback),\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n        .then(response => {\n            if(response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, \n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n        })\n        .then(response => response.json())\n        .then(response => {console.log(\"Current State is: \" + JSON.stringify(response),\n            alert(\"Current State is: \" + JSON.stringify(response)))})\n        .catch(error => {console.log('Post Feedback', error.message,\n            alert('Your Feedback could not be posted\\nError: '+ error.message))});\n}","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING ='DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING ='LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React,{ Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = (state) => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    postFeedback: (feedbackValues) => dispatch(postFeedback(feedbackValues)),\n    fetchDishes: () => {dispatch(fetchDishes())},\n    resetFeedbackForm: () => {dispatch(actions.reset('feedback'))},\n    fetchComments: () => {dispatch(fetchComments())},\n    fetchPromos: () => {dispatch(fetchPromos())},\n    fetchLeaders: () => {dispatch(fetchLeaders())}\n});\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    render() {\n\n        const HomePage = () => {\n            return (\n                <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]} \n                    dishesLoading={this.props.dishes.isLoading}\n                    dishesErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promosLoading={this.props.promotions.isLoading}\n                    promosErrMess={this.props.promotions.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]} \n                    leadersLoading={this.props.leaders.isLoading}\n                    leadersErrMess={this.props.leaders.errMess}\n                />\n            );\n        }\n\n        const DishWithId = ({match}) => {\n            return(\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]} \n                    isLoading={this.props.dishes.isLoading}\n                    errMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            );\n        }\n\n\n        return (\n            <div>\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300} >\n                        <Switch>\n                            <Route path=\"/home\" component={HomePage} />\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\n                            <Route path=\"/menu/:dishId\" component={DishWithId} />\n                            <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\n                            <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                  </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n        isLoading: true,\n        errMess: null,\n        dishes: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []};\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errMess: null,\n    comments: []\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n    \n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: true,\n    errMess: null,\n    promotions: []\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []};\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\n\n        default:\n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: true,\n    errMess: null,\n    leaders: []\n}, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []};\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\n\n        default:\n            return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n}","import React,{ Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\nclass App extends Component {\n  \n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}